name: Publish to PyPI

on:
  workflow_dispatch:
  push:
    branches:
      - main
    paths:
      - 'changeset/**'
      - 'pyproject.toml'
      - '.github/workflows/publish.yml'

permissions:
  contents: read

jobs:
  publish:
    runs-on: ubuntu-latest
    steps:
      - name: Check out repository
        uses: actions/checkout@v4
        with:
          fetch-depth: 0
          
      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.11'
          
      - name: Install build dependencies
        run: |
          python -m pip install --upgrade pip
          pip install build twine
          
      - name: Get current version
        id: version
        run: |
          # Get current version from pyproject.toml
          CURRENT_VERSION=$(python -c "import tomllib; print(tomllib.load(open('pyproject.toml', 'rb'))['project']['version'])")
          echo "current_version=$CURRENT_VERSION" >> $GITHUB_OUTPUT
          
          # Always use .dev0
          DEV_VERSION="${CURRENT_VERSION}.dev0"
          echo "dev_version=$DEV_VERSION" >> $GITHUB_OUTPUT
          
          echo "Current version: $CURRENT_VERSION"
          echo "Dev version: $DEV_VERSION"
          
      - name: Update version for dev build
        run: |
          # Update version in pyproject.toml temporarily for the build
          sed -i "s/version = \"${{ steps.version.outputs.current_version }}\"/version = \"${{ steps.version.outputs.dev_version }}\"/" pyproject.toml
          
          # Show the change
          grep "version = " pyproject.toml
          
      - name: Build package
        run: |
          python -m build
          ls -la dist/
          
      - name: Upload to PyPI
        env:
          TWINE_USERNAME: __token__
          TWINE_PASSWORD: ${{ secrets.PYPI_API_TOKEN }}
        run: |
          # Try to upload, but don't fail if version already exists
          twine upload dist/* || echo "Upload failed (possibly already exists)"
        continue-on-error: true
          
      - name: Test installation
        run: |
          # Wait a moment for PyPI to update
          sleep 10
          
          # Test that we can install it (use --force-reinstall in case it's cached)
          pip install --force-reinstall --index-url https://pypi.org/simple/ "changeset==${{ steps.version.outputs.dev_version }}"
          
          # Test that it runs
          changeset --help